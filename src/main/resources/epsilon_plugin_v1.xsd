<?xml version="1.0" encoding="UTF-8"?>
<xs:schema version="1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified"
           xmlns="http://epsilon.blackbelt.hu/maven/plugin/v1/xml/ns/definition"
           targetNamespace="http://epsilon.blackbelt.hu/maven/plugin/v1/xml/ns/definition">

    <xs:element name="configuration" type="ConfigurationType"/>

    <xs:complexType name="ConfigurationType">
        <xs:annotation>
            <xs:documentation>Epsilon Maven plugin configuration type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="metaModels" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        List of metamodels. A metamodel reference that can be either a relative/absolute file path or a
                        Maven artifact (URL syntax:
                        https://ops4j1.jira.com/wiki/spaces/paxurl/pages/3833866/Mvn+Protocol).
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="metaModel" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="models" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>List of models.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="model" type="ModelType" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="xmlModels" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>List of XML models.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="xmlModel" type="XmlModelType" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="plainXmlModels" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>List of plain XML models.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="plainXmlModel" type="PlainXmlModelType" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="excelModels" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>List of Excel models.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="excelModel" type="ExcelModelType" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="eolPrograms" type="EolProgramsType"/>
            <xs:element name="profile" type="xs:boolean" minOccurs="0" default="false"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ModelType">
        <xs:annotation>
            <xs:documentation>Model data type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="artifact" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="aliases" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="alias" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="readOnLoad" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="storeOnDisposal" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="cached" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="platformAlias" type="xs:string" minOccurs="0"/>
            <xs:element name="metaModelFile" type="xs:string" minOccurs="0"/>
            <xs:element name="expand" type="xs:boolean" minOccurs="0" default="true">
                <xs:annotation>
                    <xs:documentation>
                        One of the keys used to construct the first argument to {@link
                        org.eclipse.epsilon.emc.emf.EmfModel#load(StringProperties, String)}.

                        When paired with "true", external references will be resolved during loading.
                        Otherwise, external references are not resolved.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="metaModelUris" minOccurs="0">
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
                            One of the keys used to construct the first argument to {@link
                            org.eclipse.epsilon.emc.emf.EmfModel#load(StringProperties, String)}.

                            This key is a comma-separated list of zero or more namespaces URI of some of the metamodels
                            to which this model conforms. Users may combine this key with to loadEmf
                            "fileBasedMetamodelUris" both file-based and URI-based metamodels at the same time.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="param" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="fileBasedMetamodelUris" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        One of the keys used to construct the first argument to {@link
                        org.eclipse.epsilon.emc.emf.EmfModel#load(StringProperties, String)}.

                        This key is a comma-separated list of zero or more {@link URI}s that can be used to locate some
                        of the metamodels to which this model conforms. Users may combine this key with "metaModelUris"
                        to loadEmf both file-based and URI-based metamodels at the same time.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="fileBasedMetamodelUri" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="modelUri" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        One of the keys used to construct the first argument to {@link
                        org.eclipse.epsilon.emc.emf.EmfModel#load(StringProperties, String)}.

                        This key is paired with a {@link URI} that can be used to locate this model.
                        This key must always be paired with a value.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="reuseUnmodifiedFileBasedMetamodels" type="xs:boolean" minOccurs="0" default="true">
                <xs:annotation>
                    <xs:documentation>
                        One of the keys used to construct the first argument to
                        {@link org.eclipse.epsilon.emc.emf.EmfModel#load(StringProperties, String)}.

                        This key is a Boolean value that if set to <code>true</code> (the default), tries to reuse
                        previously registered file-based EPackages that have not been modified since the last time they
                        were registered.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="validateModel" type="xs:boolean" minOccurs="0" default="true">
                <xs:annotation>
                    <xs:documentation>
                        Validate model against Ecore metamodel and fail on validation errors.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PlainXmlModelType">
        <xs:annotation>
            <xs:documentation>Plain XML model data type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="artifact" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="aliases" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="alias" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="readOnLoad" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="storeOnDisposal" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="cached" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="platformAlias" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="XmlModelType">
        <xs:annotation>
            <xs:documentation>XML model data type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="artifact" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="aliases" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="alias" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="readOnLoad" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="storeOnDisposal" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="cached" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="platformAlias" type="xs:string" minOccurs="0"/>
            <xs:element name="metaModelFile" type="xs:string" minOccurs="0"/>
            <xs:element name="xsd" type="xs:string" minOccurs="0"/>
            <xs:element name="expand" type="xs:boolean" minOccurs="0" default="true">
                <xs:annotation>
                    <xs:documentation>
                        One of the keys used to construct the first argument to {@link
                        org.eclipse.epsilon.emc.emf.EmfModel#load(StringProperties, String)}.

                        When paired with "true", external references will be resolved during loading.
                        Otherwise, external references are not resolved.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="metaModelUris" minOccurs="0">
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>
                            One of the keys used to construct the first argument to {@link
                            org.eclipse.epsilon.emc.emf.EmfModel#load(StringProperties, String)}.

                            This key is a comma-separated list of zero or more namespaces URI of some of the metamodels
                            to which this model conforms. Users may combine this key with to loadEmf
                            "fileBasedMetamodelUris" both file-based and URI-based metamodels at the same time.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="param" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="fileBasedMetamodelUris" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        One of the keys used to construct the first argument to {@link
                        org.eclipse.epsilon.emc.emf.EmfModel#load(StringProperties, String)}.

                        This key is a comma-separated list of zero or more {@link URI}s that can be used to locate some
                        of the metamodels to which this model conforms. Users may combine this key with "metaModelUris"
                        to loadEmf both file-based and URI-based metamodels at the same time.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="fileBasedMetamodelUri" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="modelUri" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        One of the keys used to construct the first argument to {@link
                        org.eclipse.epsilon.emc.emf.EmfModel#load(StringProperties, String)}.

                        This key is paired with a {@link URI} that can be used to locate this model.
                        This key must always be paired with a value.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="reuseUnmodifiedFileBasedMetamodels" type="xs:boolean" minOccurs="0" default="true">
                <xs:annotation>
                    <xs:documentation>
                        One of the keys used to construct the first argument to
                        {@link org.eclipse.epsilon.emc.emf.EmfModel#load(StringProperties, String)}.

                        This key is a Boolean value that if set to <code>true</code> (the default), tries to reuse
                        previously registered file-based EPackages that have not been modified since the last time they
                        were registered.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ExcelModelType">
        <xs:annotation>
            <xs:documentation>Excel model data type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="artifact" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="aliases" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="alias" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="readOnLoad" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="storeOnDisposal" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="cached" type="xs:boolean" minOccurs="0" default="true"/>
            <xs:element name="platformAlias" type="xs:string" minOccurs="0"/>
            <xs:element name="metaModelFile" type="xs:string" minOccurs="0"/>
            <xs:element name="configurationArtifact" type="xs:string"/>
            <xs:element name="spreadSheetPassword" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="EolProgramsType">
        <xs:annotation>
            <xs:documentation>EOL programs.</xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:sequence>
                <xs:element name="Ecl" type="EclType"/>
            </xs:sequence>
            <xs:sequence>
                <xs:element name="Egl" type="EglType"/>
            </xs:sequence>
            <xs:sequence>
                <xs:element name="Egx" type="EgxType"/>
            </xs:sequence>
            <xs:sequence>
                <xs:element name="Eml" type="EmlType"/>
            </xs:sequence>
            <xs:sequence>
                <xs:element name="Eol" type="EolType"/>
            </xs:sequence>
            <xs:sequence>
                <xs:element name="Etl" type="EtlType"/>
            </xs:sequence>
            <xs:sequence>
                <xs:element name="Evl" type="EvlType"/>
            </xs:sequence>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="EolType">
        <xs:annotation>
            <xs:documentation>EOL program definition</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="source" type="xs:string"/>
            <xs:element name="parameters" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="parameter" type="EolProgramParameterType" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="EclType">
        <xs:annotation>
            <xs:documentation>ECL program definition.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EolType">
                <xs:sequence>
                    <xs:element name="exportMatchTrace" type="xs:string" minOccurs="0"/>
                    <xs:element name="useMatchTrace" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="EglType">
        <xs:annotation>
            <xs:documentation>EGL program definition.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EolType">
                <xs:sequence>
                    <xs:element name="outputRoot" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="EgxType">
        <xs:annotation>
            <xs:documentation>EGX program definition.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EglType"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="EmlType">
        <xs:annotation>
            <xs:documentation>EML program definition.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EolType">
                <xs:sequence>
                    <xs:element name="useMatchTrace" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="EtlType">
        <xs:annotation>
            <xs:documentation>ETL program definition.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EolType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="EvlType">
        <xs:annotation>
            <xs:documentation>EVL program definition.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="EolType">
                <xs:sequence>
                    <xs:element name="expectedErrors" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="expectedError" type="xs:string" maxOccurs="unbounded"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="expectedWarnings" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="expectedWarning" type="xs:string" maxOccurs="unbounded"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="EolProgramParameterType">
        <xs:annotation>
            <xs:documentation>EOL program parameter.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="value" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
